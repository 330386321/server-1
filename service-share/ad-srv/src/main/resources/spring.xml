<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:reg="http://www.dangdang.com/schema/ddframe/reg"
       xmlns:job="http://www.dangdang.com/schema/ddframe/job"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.dangdang.com/schema/ddframe/reg http://www.dangdang.com/schema/ddframe/reg/reg.xsd
       http://www.dangdang.com/schema/ddframe/job http://www.dangdang.com/schema/ddframe/job/job.xsd">

    <!-- 消息生产者 -->
    <bean id="defaultMQProducer" class="com.alibaba.rocketmq.client.producer.DefaultMQProducer" scope="singleton" init-method="start" destroy-method="shutdown">
        <!-- Name Server地址列表，多个用分号隔开 -->
        <property name="namesrvAddr" value="${mq.namesrv.addrs}"/>
        <!-- 客户端实例名 -->
        <property name="instanceName" value="producer"/>

        <!-- 客户端IP -->
        <!-- <property name="clientIP" value="${rocketmq.clientIP}" /> -->
        <!-- 通信层异步回调线程数 -->
        <!-- <property name="clientCallbackExecutorThreads" value="${rocketmq.clientCallbackExecutorThreads" /> -->
        <!-- 轮询Name Server间隔时间，单位毫秒 -->
        <!-- <property name="pollNameServerInteval" value="${rocketmq.pollNameServerInteval}" /> -->
        <!-- 向Broker发送心跳间隔时间，单位毫秒  -->
        <!-- <property name="heartbeatBrokerInterval" value="${rocketmq.heartbeatBrokerInterval}" /> -->
        <!-- 持久化Consumer消费进度间隔时间，单位毫秒 -->
        <!-- <property name="persistConsumerOffsetInterval" value="${rocketmq.persistConsumerOffsetInterval}" /> -->

        <!-- Producer组名，多个Producer如果属于一 个应用，发送同样的消息，则应该将它们 归为同一组 -->
        <property name="producerGroup" value="adSrvProducerGroup"/>
        <!-- 发送消息超时时间，单位毫秒 -->
        <!-- <property name="sendMsgTimeout" value="${rocketmq.producer.sendMsgTimeout}" />-->



    </bean>

    <bean id="rocketMQMessageProducerServiceImpl" class="com.lawu.eshop.mq.message.impl.RocketMQMessageProducerServiceImpl" >
        <property name="defaultMQProducer" ref="defaultMQProducer" />
    </bean>
    


    <!-- 消息消费者 -->
    <bean id="defaultMQConsumerFactory" class="com.lawu.eshop.mq.message.MQConsumerFactory" init-method="createDeviceDatagramConsumer" destroy-method="shutdown" >
        <!-- Name Server地址列表，多个用分号隔开 -->
        <property name="namesrvAddr" value="${mq.namesrv.addrs}"/>
        <!-- 客户端实例名 -->
        <property name="instanceName" value="consumer"/>

        <property name="consumerGroup" value="adSrvConsumerGroup"/>
        <!-- 批量拉消息，一次最多拉多少条， 默认设置为32 -->
        <property name="pullBatchSize" value="35"/>
        <!-- 批量消费，一次消费多少条消息， 默认设置为1 -->
        <property name="consumeMessageBatchMaxSize" value="5"/>
        <property name="messageListenerConcurrently" ref="messageConsumerListener" />

    </bean>

    <bean id="messageConsumerListener" class="com.lawu.eshop.ad.srv.mq.MessageConsumerListener" />

    <!--配置作业注册中心 -->
    <reg:zookeeper id="adCenter" server-lists="${zookeeper.servers}" namespace="ad-job"/>

    <!-- 配置作业-->
   <!--  <job:simple id="transactionScheduledJob" description="补偿事务" class="com.lawu.eshop.compensating.transaction.job.TransactionScheduledJob" registry-center-ref="regCenter" cron="0/10 * * * * ?" sharding-total-count="1" overwrite="true" />
        <job:simple id="adJob" description="广告投放或者结束" class="com.lawu.eshop.ad.srv.job.AdJob" registry-center-ref="regCenter" cron="0/10 * * * * ?" sharding-total-count="1" overwrite="true" />
	 -->

</beans>