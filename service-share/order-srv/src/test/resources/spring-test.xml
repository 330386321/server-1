<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
    xmlns:jdbc="http://www.springframework.org/schema/jdbc" 
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:aop="http://www.springframework.org/schema/aop"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
         http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc.xsd
         http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd
         http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd">

	<context:component-scan base-package="com.lawu">
		<context:exclude-filter type="annotation" expression="org.springframework.cloud.netflix.feign.FeignClient" />
		<context:exclude-filter type="annotation" expression="org.springframework.boot.autoconfigure.SpringBootApplication" />
        <context:exclude-filter type="assignable" expression="com.lawu.eshop.order.srv.OrderSrvApplication" />
		<!-- 
		<context:exclude-filter type="annotation" expression="com.lawu.eshop.compensating.transaction.annotation.CompensatingTransactionMain" />
		<context:exclude-filter type="annotation" expression="com.lawu.eshop.compensating.transaction.annotation.CompensatingTransactionFollow" />
		-->
        <context:exclude-filter type="assignable" expression="com.lawu.eshop.order.srv.strategy.ExpressStrategy" />
	</context:component-scan>
    
    <context:component-scan base-package="com.lawu.eshop.order.srv.mock"/>
    
	<bean id="propertyConfigurer" class="org.springframework.context.support.PropertySourcesPlaceholderConfigurer">
		<property name="nullValue" value="@null" />
		<property name="localOverride" value="true" />
		<property name="ignoreResourceNotFound" value="true" />
		<property name="locations">
			<list>
				<value>classpath*:bootstrap.properties</value>
			</list>
		</property>
		<property name="order" value="0" />
		<property name="fileEncoding">
			<value>UTF-8</value>
		</property>
	</bean>
    
    <!-- JSON转换器 -->
    <bean class=" org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter">
        <property name="messageConverters">
            <list>
                <!-- json转换器 -->
                <bean class="org.springframework.http.converter.ByteArrayHttpMessageConverter" />
                <bean class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter">
                    <property name="objectMapper">
                        <bean class="com.fasterxml.jackson.databind.ObjectMapper">
                            <!-- 处理responseBody 里面日期类型 -->
                            <property name="dateFormat">
                                <bean class="java.text.SimpleDateFormat">
                                    <constructor-arg type="java.lang.String" value="${spring.jackson.date-format}" />
                                </bean>
                            </property>
                            <!-- 时区指定 -->
                            <property name="timeZone" value="${spring.jackson.time-zone}" />
                            <!-- 为null字段时不显示 -->
                            <property name="serializationInclusion">
                                <value type="com.fasterxml.jackson.annotation.JsonInclude.Include">NON_NULL</value>
                            </property>
                        </bean>
                    </property>
                </bean>
                <bean class="org.springframework.http.converter.StringHttpMessageConverter" />
            </list>
        </property>
        <property name="webBindingInitializer">
            <bean class="org.springframework.web.bind.support.ConfigurableWebBindingInitializer">
                <property name="conversionService">
                    <bean class="org.springframework.format.support.FormattingConversionServiceFactoryBean"></bean>
                </property>
            </bean>
        </property>
    </bean>
    
	<bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
		<property name="driverClassName" value="org.h2.Driver" />
		<property name="url" value="jdbc:h2:mem:bone;DB_CLOSE_DELAY=-1;MODE=MySQL" />
	</bean>
	
	<jdbc:initialize-database data-source="dataSource" ignore-failures="DROPS">
		<jdbc:script location="classpath:sql/ddl.sql" />
	</jdbc:initialize-database>
    
    
    <!-- 配置作业-->
    <bean id="shardingContexts" class="com.dangdang.ddframe.job.executor.ShardingContexts">
        <constructor-arg name="taskId" value="testTaskId"/>
        <constructor-arg name="jobName" value="testJobName"/>
        <constructor-arg name="shardingTotalCount" value="1"/>
        <constructor-arg name="jobParameter" value="10"/>
        <constructor-arg name="shardingItemParameters">
            <map></map>
        </constructor-arg>
        <constructor-arg name="jobEventSamplingCount" value="0"/>
    </bean>
    <bean id="shardingContext" class="com.dangdang.ddframe.job.api.ShardingContext">
        <constructor-arg name="shardingContexts" ref="shardingContexts"/>
        <constructor-arg name="shardingItem" value="0"/>
    </bean>
    <bean id="shoppingOrderAutoCancelOrderJob" class="com.lawu.eshop.order.srv.jobs.ShoppingOrderAutoCancelOrderJob"/>
    <bean id="shoppingOrderAutoRemindToBeCancelledOrderJob" class="com.lawu.eshop.order.srv.jobs.ShoppingOrderAutoRemindToBeCancelledOrderJob"/>
    <bean id="shoppingOrderAutoCommentOrderJob" class="com.lawu.eshop.order.srv.jobs.ShoppingOrderAutoCommentOrderJob"/>
    <bean id="shoppingOrderAutoPaymentsToMerchantJob" class="com.lawu.eshop.order.srv.jobs.ShoppingOrderAutoPaymentsToMerchantJob"/>
    <bean id="shoppingOrderAutoReceiptJob" class="com.lawu.eshop.order.srv.jobs.ShoppingOrderAutoReceiptJob"/>
    <bean id="shoppingRefundAutoRemindToBeConfirmedForRefundJob" class="com.lawu.eshop.order.srv.jobs.ShoppingRefundAutoRemindToBeConfirmedForRefundJob"/>
    <bean id="shoppingRefundAutoToBeConfirmedForRefundJob" class="com.lawu.eshop.order.srv.jobs.ShoppingRefundAutoToBeConfirmedForRefundJob"/>
    <bean id="shoppingRefundAutoRemindToBeConfirmedForReturnRefundJob" class="com.lawu.eshop.order.srv.jobs.ShoppingRefundAutoRemindToBeConfirmedForReturnRefundJob"/>
    <bean id="shoppingRefundAutoToBeConfirmedForReturnRefundJob" class="com.lawu.eshop.order.srv.jobs.ShoppingRefundAutoToBeConfirmedForReturnRefundJob"/>
    <bean id="shoppingRefundFillReturnAddressJob" class="com.lawu.eshop.order.srv.jobs.ShoppingRefundFillReturnAddressJob"/>
    <bean id="shoppingRefundAutoRemindFillReturnAddressJob" class="com.lawu.eshop.order.srv.jobs.ShoppingRefundAutoRemindFillReturnAddressJob"/>
    <bean id="shoppingRefundRefundFailedJob" class="com.lawu.eshop.order.srv.jobs.ShoppingRefundRefundFailedJob"/>
    <bean id="shoppingRefundAutoRemindRefundFailedJob" class="com.lawu.eshop.order.srv.jobs.ShoppingRefundAutoRemindRefundFailedJob"/>
    <bean id="shoppingRefundAutoRemindToBeReturnJob" class="com.lawu.eshop.order.srv.jobs.ShoppingRefundAutoRemindToBeReturnJob"/>
    <bean id="shoppingRefundToBeReturnJob" class="com.lawu.eshop.order.srv.jobs.ShoppingRefundToBeReturnJob"/>
    <aop:aspectj-autoproxy  proxy-target-class="true"/>
</beans>